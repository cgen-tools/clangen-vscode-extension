{
    "title": "Clangen Patrol Schema",
    "description": "A patrol json for Clan Generator.",
    "type": "array",
    "definitions": {
        "injury": {
            "type": "object",
            "properties": {
                "cats": {
                    "description": "Which cats are injured.",
                    "type": "string",
                    "enum": [
                        "p_l",
                        "r_c",
                        "s_c",
                        "app1",
                        "app2",
                        "patrol",
                        "multi"
                    ]
                },
                "injuries": {
                    "description": "Pool of injuries to draw from.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scars": {
                    "description": "Pool of scars to draw from in Classic.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "no_results": {
                    "description": "True if the injury \"got\" message does not show up in patrol summary.",
                    "type": "boolean"
                }
            }        
        },
        "outcome": {
            "type": "object",
            "properties": {
                "text": {
                    "description": "Displayed outcome text.",
                    "type": "string"
                },
                "exp": {
                    "description": "Base exp gain.",
                    "type": "integer"
                },
                "stat_skill": {
                    "description": "Makes this a stat outcome which can occur if a stat cat to be found.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stat_trait": {
                    "description": "Makes this a stat outcome which can occur if a stat cat to be found.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "can_have_stat": {
                    "description": "Overrides default bejaviour or adds additional requirements for stat_cat picking.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "p_l",
                            "r_c",
                            "app1",
                            "app2",
                            "not_pl_rc",
                            "any",
                            "adult",
                            "app",
                            "healer"
                        ]
                    }
                },
                "prey": {
                    "type": "array",
                    "items": {
                        "enum": [
                            "very_small",
                            "small",
                            "medium",
                            "large"
                        ]
                    }
                },
                "herbs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lost_cats": {
                    "description": "Indicates which cats will become lost.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "enum": [
                            "p_l",
                            "r_c",
                            "s_c",
                            "app1",
                            "app2",
                            "patrol",
                            "multi"
                        ]
                    }
                },
                "dead_cats": {
                    "description": "Indicates which cats will die.",
                    "type": "array",
                    "items": {
                        "enum": [
                            "p_l",
                            "r_c",
                            "s_c",
                            "app1",
                            "app2",
                            "patrol",
                            "multi"
                        ]
                    }
                },
                "injury": {
                    "description": "Indicates which cats get injured and now.",
                    "$ref": "#/definitions/injury"
                },
                "history_text": {
                    "description": "Controls the history-text for scars and death.",
                    "type": "object",
                    "properties": {
                        "reg_death": {
                            "type": "string",
                            "description": "Death history text for non-leaders. Whole sentence."
                        },
                        "lead_death": {
                            "type": "string",
                            "description": "Death history text for leaders. Sentence fragment."
                        },
                        "scar": {
                            "type": "string",
                            "description": "Scar history. Whole sentence."
                        }
                    }
                },
                "relationships": {
                    "description": "Indicates effect on cat relationships.",
                    "type": "array",
                    "items": {
                        "$comment": "TODO",
                        "type": "object"
                    }
                },
                "new_cat": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$comment": "TODO",
                            "type": "string"
                        }
                    }
                },
                "art": {
                    "description": "Name of outcome-specific art, without file extension (no .png). If no art is specified, the intro art will be used.",
                    "type": "string"
                },
                "art_clean": {
                    "description": "Name of non-gore outcome-specific art, without file extension (no .png). Adding a clean version of the art marks the normal version as containing gore.",
                    "type": "string"
                },
                "outsider_rep": {
                    "type": "integer"
                },
                "other_clan_rep": {
                    "type": "integer"
                }
            }
        }
    },
    "items": {
        "type": "object",
        "properties": {
            "patrol_id": {
                "description": "Unique string used to identify the patrol.",
                "type": "string"
            },
            "biome": {
                "description": "Controls the biome(s) the patrol appears in",
                "type": "array",
                "items": { 
                    "enum": [
                        "mountainous",
                        "plains",
                        "forest",
                        "beach",
                        "wetlands",
                        "desert",
                        "any"
                    ]
                }
            },
            "season": {
                "description": "Controls the season(s) the patrol appears in.",
                "type": "array",
                "items": { 
                    "enum": [
                        "greenleaf",
                        "leaf-fall",
                        "leaf-bare",
                        "newleaf",
                        "any"
                    ]
                }
            },
            "types": {
                "description": "Controls the type of patrol.",
                "type": "array",
                "items": { 
                    "enum": [
                        "hunting",
                        "herb_gathering",
                        "border",
                        "training"
                    ]
                }
            },
            "tags": {
                "description": "Tags are used for some filtering purposes, and some odd-and-ends. Tags never affect outcome.",
                "type": "array",
                "items": {
                    "enum": [
                        "romantic",
                        "rom_two_apps",
                        "disaster",
                        "new_cat",
                        "halloween",
                        "april_fools",
                        "new_years"
                    ]
                }
            },
            "patrol_art": {
                "description": "The name of displayed patrol art file, without any file extension (no .png).",
                "type": "string"
            },
            "patrol_art_clean": {
                "description": "If patrol_art contains gore, this line can hold a clean version. The existence of a non-empty string in this parameter marks the patrol art in \"patrol_art\" as explicit.",
                "type": "string"
            },
            "min_cats": {
                "description": "Minimum total nunber of cats for this patrol.",
                "type": "integer"
            },
            "max_cats": {
                "description": "Maximum total number of cats for this patrol",
                "type": "integer"
            },
            "min_max_status": {
                "description": "Allows specification of the minimum and maximum number of specific types of cats that are allowed on the patrol.",
                "type": "object",
                "propertyNames": {
                    "enum": [
                        "medicine cat",
                        "warrior",
                        "leader",
                        "deputy",
                        "apprentice",
                        "medicine cat apprentice",
                        "healer cats",
                        "normal adult",
                        "all apprentices"
                    ]
                },
                "additionalProperties": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "weight": {
                "description": "Controls how common a patrol is. Normal patrols would be around 20. Lower numbers are less common and higher numbers are more common.",
                "type": "integer"
            },
            "chance_of_success": {
                "description": "Controls chance to succeed. Higher number is higher chance to succeed.",
                "type": "integer"
            },
            "relationship_constraint": {
                "description": "Only allows patrol if cats meet relationship constraint.",
                "type": "array",
                "items": {
                    "anyOf": [
                        {
                            "enum": [
                                "siblings",
                                "mates",
                                "mates_with_pl",
                                "parent/child",
                                "child/parent"
                            ]
                        },
                        {
                            "type": "string",
                            "pattern": "^platonic_(0|[1-9][0-9]?|100)$"
                        },
                        {
                            "type": "string",
                            "pattern": "^dislike_(0|[1-9][0-9]?|100)$"
                        },
                        {
                            "type": "string",
                            "pattern": "^comfortable_(0|[1-9][0-9]?|100)$"
                        },
                        {
                            "type": "string",
                            "pattern": "^jealousy_(0|[1-9][0-9]?|100)$"
                        },
                        {
                            "type": "string",
                            "pattern": "^trust_(0|[1-9][0-9]?|100)$"
                        }
                    ]
                }
            },
            "pl_skill_constraint": {
                "description": "Only allow this patrol if the patrol leader (p_l) meets at least one of these skill requirements.",
                "type": "array",
                "items": {
                    "type": "string",
                    "pattern": "^[A-Z]*,[1-4]$"
                }
            },
            "intro_text": {
                "description": "The text that displays when the patrol first starts.",
                "type": "string"
            },
            "decline_text": {
                "description": "The text that displays if the patrol is declined (do not proceed)",
                "type": "string"
            },
            "success_outcomes": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/outcome"
                }
            },
            "fail_outcomes": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/outcome"
                }
            },
            "antag_success_outcomes": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/outcome"
                }
            },
            "antag_fail_outcomes": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/outcome"
                }
            }
        },
        "required": [
            "patrol_id",
            "biome",
            "types",
            "tags",
            "patrol_art",
            "min_cats",
            "max_cats",
            "weight",
            "chance_of_success",
            "intro_text",
            "decline_text",
            "success_outcomes",
            "fail_outcomes"
        ]
    }
}
